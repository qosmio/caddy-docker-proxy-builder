---
name: Build and push docker images
on:
  workflow_dispatch:
  repository_dispatch:
jobs:
  caddy:
    if: 1 == 0
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            os: linux
            arch: amd64
            variant: ""
          - platform: linux/arm64
            os: linux
            arch: arm64
            variant: ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest release version
        id: caddy-version
        uses: actions/github-script@v6
        with:
          script: |
            return github.rest.repos.getLatestRelease({
              owner: 'caddyserver',
              repo: 'caddy',
            }).then(result => {
                return result.data.name
            })
          result-encoding: string

      - name: Print result
        run: echo "${{steps.caddy-version.outputs.result}}"

      - name: Set up Golang environment
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Check Go version
        run: go version

      - name: Set up xcaddy
        run: |-
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build caddy
        env:
          GOOS: ${{matrix.os}}
          GOARCH: ${{matrix.arch}}
          GOARM: ${{matrix.variant}}
        run: |-
          mkdir -p ./artifacts/binaries/${{matrix.platform}}
          xcaddy build ${{steps.caddy-version.outputs.result}} \
            --output ./artifacts/binaries/${{matrix.platform}}/caddy \
            --with github.com/caddy-dns/cloudflare \
            --with github.com/kirsch33/realip \
            --with github.com/lucaslorentz/caddy-docker-proxy/v2@latest \
            --with github.com/caddyserver/caddy/v2@latest

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts

  docker:
    # needs: caddy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Test if an update is needed
        run: |
          chmod 700 ./artifacts/binaries/linux/amd64/caddy
          ./artifacts/binaries/linux/amd64/caddy list-modules -packages -versions > ./list-modules.txt
          ! git diff --exit-code list-modules.txt

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push docker image (linux)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.alpine
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{github.repository}}:latest

      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ghcr.io/${{github.repository}}:latest
# - name: Push repository
#   uses: stefanzweifel/git-auto-commit-action@v4
#   with:
#     commit_message: Automatic build
#     branch: master
#     file_pattern: list-modules.txt
